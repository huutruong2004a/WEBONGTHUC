@model IEnumerable<WEB_CONG_THUC.Models.Blog>
@{
    ViewData["Title"] = "Blog Ẩm Thực";
    int pageSize = 6;
    int pageNumber = Convert.ToInt32(ViewBag.Page ?? 1);
    var blogs = Model.Skip((pageNumber - 1) * pageSize).Take(pageSize);
}

<div class="container py-4">
    <!-- Header Section -->
    <div class="blog-header text-center mb-5">
        <div class="badge bg-orange mb-2">Blog</div>
        <h1 class="display-5 fw-bold mb-3">Blog Ẩm Thực</h1>
        <p class="lead text-muted">Khám phá các bài viết về ẩm thực, mẹo nấu ăn và văn hóa ẩm thực</p>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            @if (!blogs.Any())
            {
                <div class="alert alert-info text-center p-5">
                    <i class="fas fa-search fa-3x mb-3"></i>
                    <h4>Không tìm thấy kết quả</h4>
                    <p class="mb-0">Không có thông tin "@ViewBag.SearchTerm" đang tìm</p>
                </div>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var blog in blogs)
                    {
                        string previewText = GetPreviewText(blog.Content);

                        <div class="col-md-6">
                            <div class="card blog-card h-100 border-0 shadow-sm">
                                @{
                                    var imgMatch = System.Text.RegularExpressions.Regex.Match(blog.Content,
                                    "<img[^>]+src\\s*=\\s*[\'\\\"]([^\'\\\"]+)[\'\\\"][^>]*>");
                                    var imageUrl = imgMatch.Success ? imgMatch.Groups[1].Value : "/images/blog-default.jpg";
                                }
                                <div class="blog-image-wrapper">
                                    <img src="@imageUrl" class="card-img-top" alt="@blog.Title">
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <a asp-action="Details" asp-route-slug="@blog.Slug"
                                           class="text-decoration-none text-dark stretched-link">
                                            @blog.Title
                                        </a>
                                    </h5>
                                    <p class="card-text text-muted">@previewText</p>
                                </div>
                                <div class="card-footer bg-transparent border-0">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="author d-flex align-items-center">
                                            <i class="fas fa-user-circle fa-lg text-orange"></i>
                                            <span class="ms-2">Tác giả</span>
                                        </div>
                                        <div class="blog-meta">
                                            <i class="far fa-clock text-orange"></i>
                                            <span class="ms-1 text-muted">
                                                @{
                                                    var timeAgo = DateTime.Now - blog.CreatedAt;
                                                    string timeDisplay = timeAgo.Days switch
                                                    {
                                                        0 when timeAgo.Hours > 0 => $"{timeAgo.Hours} giờ trước",
                                                        0 => "Vừa xong",
                                                        1 => "Hôm qua",
                                                        _ => blog.CreatedAt.ToString("dd/MM/yyyy")
                                                    };
                                                }
                                                @timeDisplay
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                <nav class="mt-5">
                    <ul class="pagination justify-content-center">
                        @{
                            int totalItems = Model.Count();
                            int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
                            for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == pageNumber ? "active" : "")">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@i" asp-route-searchTerm="@ViewBag.SearchTerm">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </nav>
            }
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Search Box -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body">
                    <h5 class="card-title mb-3">
                        <i class="fas fa-search text-orange"></i> Tìm kiếm
                    </h5>
                    <form asp-action="Index" method="get">
                        <div class="input-group">
                            <input type="text" class="form-control" name="searchTerm"
                                   placeholder="Tìm kiếm bài viết..." value="@ViewBag.SearchTerm">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Popular Posts -->
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-3">
                        <i class="fas fa-fire text-orange"></i> Bài viết nổi bật
                    </h5>
                    <div class="list-group list-group-flush">
                        @foreach (var topBlog in ViewBag.TopViewedBlogs)
                        {
                            <a href="@Url.Action("Details", new { slug = topBlog.Slug })"
                               class="list-group-item list-group-item-action border-0 px-0">
                                <div class="d-flex gap-3">
                                    @{
                                        var imgMatch = System.Text.RegularExpressions.Regex.Match(topBlog.Content,
                                        "<img[^>]+src\\s*=\\s*[\'\\\"]([^\'\\\"]+)[\'\\\"][^>]*>");
                                        var thumbUrl = imgMatch.Success ? imgMatch.Groups[1].Value : "/images/blog-default.jpg";
                                    }
                                    <img src="@thumbUrl" class="popular-post-thumb" alt="@topBlog.Title">
                                    <div>
                                        <h6 class="mb-1">@topBlog.Title</h6>
                                        <small class="text-muted">
                                            <i class="fas fa-eye"></i> @topBlog.ViewCount lượt xem
                                        </small>
                                    </div>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-orange: #FF6B00;
        --primary-light: #FFE8D9;
    }

    .bg-orange {
        background-color: var(--primary-orange) !important;
        color: #fff;
    }

    .text-orange {
        color: var(--primary-orange) !important;
    }

    .badge {
        background-color: var(--primary-orange);
        color: white;
        padding: 0.5rem 1rem;
        font-weight: 500;
        font-size: 1rem;
        border-radius: 0.5rem;
    }

    .blog-header {
        background: linear-gradient(to bottom, var(--primary-light), transparent);
        padding: 3rem 0;
        margin-top: -1.5rem;
        margin-bottom: 2rem;
    }

    .blog-card {
        transition: transform 0.3s ease;
        border-radius: 1rem;
    }

        .blog-card:hover {
            transform: translateY(-5px);
        }

    .blog-image-wrapper {
        height: 200px;
        overflow: hidden;
        border-top-left-radius: 1rem;
        border-top-right-radius: 1rem;
    }

        .blog-image-wrapper img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .popular-post-thumb {
        width: 80px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }
</style>

@functions {
    private string GetPreviewText(string content)
    {
        if (string.IsNullOrEmpty(content)) return "";
        string plainText = System.Text.RegularExpressions.Regex.Replace(content, "<[^>]+>", " ").Trim();
        int firstPeriodIndex = plainText.IndexOf('.');
        return firstPeriodIndex != -1 && firstPeriodIndex < plainText.Length
            ? plainText.Substring(0, firstPeriodIndex + 1)
            : (plainText.Length > 100 ? plainText.Substring(0, 100) + "..." : plainText);
    }
}