@model IEnumerable<Video>
@{
    ViewData["Title"] = "Thư viện Video";
    int pageSize = 6; // Số video trên mỗi trang
    int pageNumber = Convert.ToInt32(ViewBag.Page ?? 1);
    var videos = Model.Skip((pageNumber - 1) * pageSize).Take(pageSize);
}

<div class="container py-4">
    <!-- Phần filters -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h2 class="section-title">Thư viện Video</h2>
            <p class="text-muted">Khám phá các video hướng dẫn nấu ăn</p>
        </div>
        <div class="col-md-4">
            <form asp-action="Index" method="get" id="searchForm">
                <div class="input-group">
                    <select name="categoryId" id="categoryId" class="form-select" asp-items="ViewBag.Categories" onchange="document.getElementById('searchForm').submit();">
                        <option value="">Tất cả danh mục</option>
                        @* Các options sẽ được render bởi asp-items="ViewBag.Categories" *@
                        @* Giữ lại logic selected nếu cần thiết, nhưng asp-items và giá trị của categoryId sẽ tự xử lý việc này nếu ViewBag.SelectedCategoryId được truyền đúng *@
                    </select>
                    <input type="text" class="form-control" name="searchString"
                           placeholder="Tìm kiếm..." value="@Context.Request.Query["searchString"]">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <i class="fas fa-info-circle fa-2x mb-3"></i>
            <h4>Không tìm thấy video</h4>
            <p class="mb-0">@(ViewBag.CurrentRecipe != null ? "Chưa có video nào cho công thức này." : "Không tìm thấy video phù hợp.")</p>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var video in Model)
            {
                <div class="col">
                    <div class="video-card h-100 shadow-sm">
                        <div class="video-thumbnail position-relative">
                            <img src="@video.ThumbnailUrl" alt="@video.Title" class="w-100 rounded-top" />
                            <a href="@Url.Action("Details", new { id = video.Id })"
                               class="play-overlay d-flex align-items-center justify-content-center">
                                <div class="play-button-wrapper">
                                    <div class="play-button">
                                        <i class="fas fa-play"></i>
                                    </div>
                                    <div class="pulse"></div>
                                </div>
                            </a>
                        </div>
                        <div class="video-info p-3">
                            <h5 class="video-title">
                                <a href="@Url.Action("Details", new { id = video.Id })"
                                   class="text-decoration-none text-dark">@video.Title</a>
                            </h5>
                            <p class="video-description text-muted small">
                                @(video.Description?.Length > 80 ? video.Description.Substring(0, 80) + "..." : video.Description)
                            </p>
                            @if (video.Category != null)
                            {
                                <div class="video-category mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-tag text-warning"></i>
                                        <span class="ms-1">@video.Category.Name</span>
                                    </small>
                                </div>
                            }
                            @if (video.Recipe != null)
                            {
                                <div class="recipe-link mb-3">
                                    <i class="fas fa-utensils text-success"></i>
                                    <a asp-controller="Recipes" asp-action="Details"
                                       asp-route-id="@video.RecipeId" class="text-decoration-none ms-2">
                                        @video.Recipe.Title
                                    </a>
                                </div>
                            }
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="views">
                                    <i class="fas fa-eye text-primary"></i>
                                    <span class="ms-1">@video.ViewCount lượt xem</span>
                                </span>
                                @if (User.Identity?.IsAuthenticated ?? false)
                                {
                                    <button class="btn-favorite bg-transparent border-0 @(ViewBag.UserFavorites?.Contains(video.Id) ?? false ? "active" : "")"
                                            data-video-id="@video.Id">
                                        <i class="fas fa-heart"></i>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="~/css/video.css" rel="stylesheet" />

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-submit form when category selection changes (đã thêm onchange trực tiếp vào select)
            // document.getElementById('categoryId')?.addEventListener('change', function() {
            //     document.getElementById('searchForm').submit();
            // });

            // Handle favorite button clicks
            document.querySelectorAll('.btn-favorite').forEach(btn => {
                btn.addEventListener('click', async function() {
                    const videoId = this.dataset.videoId;
                    try {
                        const response = await fetch(`/Videos/ToggleFavorite/${videoId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            this.classList.toggle('active');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
    </script>
}