@model Video
@{
    ViewData["Title"] = Model.Title;
}

<div class="container py-4">
    <div class="row">
        <!-- Video Player Section -->
        <div class="col-lg-8">
            <div class="video-player-section bg-white rounded-3 shadow-sm p-3">
                <div class="video-player-section mb-4">
                    @if (!string.IsNullOrEmpty(Model.VideoUrl))
                    {
                        @if (Model.UploadType == VideoUploadType.Url)
                        {
                            string videoId = "";
                            if (Model.VideoUrl.Contains("youtube.com/watch?v="))
                            {
                                videoId = Model.VideoUrl.Split("v=")[1].Split('&')[0];
                            }
                            else if (Model.VideoUrl.Contains("youtu.be/"))
                            {
                                videoId = Model.VideoUrl.Split('/').Last().Split('?')[0];
                            }

                            @if (!string.IsNullOrEmpty(videoId))
                            {
                                <div class="ratio ratio-16x9 rounded-3 overflow-hidden shadow">
                                    <iframe src="https://www.youtube.com/embed/@videoId"
                                            title="@Model.Title"
                                            frameborder="0"
                                            class="rounded-3"
                                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                            allowfullscreen>
                                    </iframe>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="ratio ratio-16x9 rounded-3 overflow-hidden shadow">
                                <video id="localVideo" class="w-100 h-100" controls>
                                    <source src="@Url.Content(Model.VideoUrl)" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                            </div>
                        }
                    }                   
                </div>

                <!-- Video Info -->
                <div class="video-info border-bottom pb-3">
                    <h1 class="h2 mb-3">@Model.Title</h1>
                    <div class="d-flex flex-wrap align-items-center text-muted mb-3">
                        <span class="me-4">
                            <i class="fas fa-eye text-warning"></i>
                            <span class="ms-1">@Model.ViewCount lượt xem</span>
                        </span>
                        <span class="me-4">
                            <i class="fas fa-calendar-alt text-warning"></i>
                            <span class="ms-1">@Model.CreatedAt.ToString("dd/MM/yyyy")</span>
                        </span>
                        @if (Model.User != null)
                        {
                            <span class="me-4"> @*Thêm me-4 để có khoảng cách nếu có Category*@
                                <i class="fas fa-user text-warning"></i>
                                <span class="ms-1">@Model.User.UserName</span>
                            </span>
                        }
                        @if (Model.Category != null) @*Kiểm tra xem video có Category không*@
                        {
                            <span class="me-4">
                                <i class="fas fa-tag text-warning"></i> @*Sử dụng icon tag cho Category*@
                                <span class="ms-1">@Model.Category.Name</span>
                            </span>
                        }
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <button class="btn btn-outline-warning ms-auto btn-favorite @(ViewBag.IsFavorited ? "active" : "")"
                                    data-video-id="@Model.Id">
                                <i class="fas fa-heart"></i>
                                <span class="ms-1">@(ViewBag.IsFavorited ? "Đã thích" : "Yêu thích")</span>
                            </button>
                        }
                    </div>
                    <div class="video-description">
                        <h5 class="text-primary mb-2">Mô tả</h5>
                        <p class="text-muted">@Model.Description</p>
                    </div>
                </div>

                <!-- Comments Section -->
                <div class="comments-section mt-4">
                    <h3 class="h4 mb-4">
                        <i class="fas fa-comments text-warning"></i>
                        Bình luận (@Model.Comments?.Count)
                    </h3>

                    @if (User.Identity?.IsAuthenticated ?? false)
                    {
                        <div class="comment-form-container bg-light p-3 rounded-3 mb-4">
                            <form asp-action="AddComment" method="post" class="comment-form">
                                @Html.AntiForgeryToken() @*Add AntiForgeryToken here*@
                                <input type="hidden" name="videoId" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Url.Action("Details", new { id = Model.Id })" />
                                <div class="form-group mb-2">
                                    <textarea name="content" class="form-control border-0 shadow-sm"
                                              rows="3" placeholder="Chia sẻ suy nghĩ của bạn (không bắt buộc nếu bạn chỉ muốn đánh giá)"></textarea>
                                </div>
                                <div class="form-group mb-2">
                                    <label for="rating" class="form-label">Đánh giá:</label>
                                    <div id="star-rating" class="fs-4">
                                        <i class="far fa-star" data-value="1"></i>
                                        <i class="far fa-star" data-value="2"></i>
                                        <i class="far fa-star" data-value="3"></i>
                                        <i class="far fa-star" data-value="4"></i>
                                        <i class="far fa-star" data-value="5"></i>
                                    </div>
                                    <input type="hidden" name="rating" id="rating" value="0" />
                                </div>
                                <div class="text-end mt-2">
                                    <button type="submit" class="btn btn-warning">
                                        <i class="fas fa-paper-plane"></i>
                                        Gửi bình luận
                                    </button>
                                </div>
                            </form>
                        </div>
                    }
                    else
                    {
                        <div class="login-prompt text-center bg-light p-4 rounded-3 mb-4">
                            <i class="fas fa-user-circle fa-3x text-primary mb-3"></i>
                            <p class="mb-3">Đăng nhập để tham gia bình luận</p>
                            <a asp-area="Identity" asp-page="/Account/Login"
                               asp-route-returnUrl="@Url.Action("Details", new { id = Model.Id })"
                               class="btn btn-primary">
                                <i class="fas fa-sign-in-alt"></i>
                                Đăng nhập
                            </a>
                        </div>
                    }

                    <div class="comments-list">
                        @if (Model.Comments != null && Model.Comments.Any())
                        {
                            foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                            {
                                <div class="comment-item bg-light p-3 rounded-3 mb-3">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-user-circle fa-2x text-warning"></i>
                                            <div class="ms-2">
                                                <div class="fw-bold">@comment.User?.UserName</div>
                                                <small class="text-muted">
                                                    @{
                                                        var timeAgo = DateTime.Now - comment.CreatedAt;
                                                        string timeDisplay = timeAgo.Days switch
                                                        {
                                                            0 when timeAgo.Hours > 0 => $"{timeAgo.Hours} giờ trước",
                                                            0 => "Vừa xong",
                                                            1 => "Hôm qua",
                                                            _ => comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                                        };
                                                    }
                                                    @timeDisplay
                                                </small>
                                            </div>
                                        </div>
                                        <div>
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="@(i <= comment.Rating ? "fas" : "far") fa-star text-warning"></i>
                                            }
                                        </div>
                                    </div>
                                    <div class="comment-content">
                                        @comment.Content
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="no-comments text-center py-5">
                                <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                                <p class="text-muted">Chưa có bình luận nào. Hãy là người đầu tiên bình luận!</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            @if (Model.Recipe != null)
            {
                <div class="related-recipe bg-white rounded-3 shadow-sm p-3 mb-4">
                    <h4 class="h5 mb-3 text-primary">
                        <i class="fas fa-utensils"></i>
                        Công thức liên quan
                    </h4>
                    <div class="card border-0 shadow-sm">
                        @if (!string.IsNullOrEmpty(Model.Recipe.ImageUrl))
                        {
                            <img src="@Model.Recipe.ImageUrl" class="card-img-top rounded-top" alt="@Model.Recipe.Title">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@Model.Recipe.Title</h5>
                            <p class="card-text text-muted">@Model.Recipe.Description</p>
                            <a asp-controller="Recipes" asp-action="Details"
                               asp-route-id="@Model.Recipe.Id"
                               class="btn btn-outline-primary w-100">
                                <i class="fas fa-book-open"></i>
                                Xem công thức
                            </a>
                        </div>
                    </div>
                </div>
            }

            @if (ViewBag.RelatedVideos != null)
            {
                <div class="related-videos bg-white rounded-3 shadow-sm p-3">
                    <h4 class="h5 mb-3 text-primary">
                        <i class="fas fa-video"></i>
                        Video liên quan
                    </h4>
                    @foreach (var relatedVideo in ViewBag.RelatedVideos)
                    {
                        <div class="related-video-item mb-3">
                            <a asp-action="Details" asp-route-id="@relatedVideo.Id"
                               class="text-decoration-none">
                                <div class="d-flex">
                                    <div class="flex-shrink-0 position-relative">
                                        <img src="@relatedVideo.ThumbnailUrl" alt="@relatedVideo.Title"
                                             class="rounded" style="width: 120px; height: 68px; object-fit: cover;">
                                        <div class="play-icon">
                                            <i class="fas fa-play"></i>
                                        </div>
                                    </div>
                                    <div class="flex-grow-1 ms-3">
                                        <h6 class="mb-1 text-dark">@relatedVideo.Title</h6>
                                        <small class="text-muted">
                                            <i class="fas fa-eye"></i> @relatedVideo.ViewCount lượt xem
                                        </small>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<link href="~/css/video-detail.css" rel="stylesheet" />

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const favoriteBtn = document.querySelector('.btn-favorite');
            if (favoriteBtn) {
                favoriteBtn.addEventListener('click', async function() {
                    const videoId = this.dataset.videoId;
                    const icon = this.querySelector('i.fa-heart');
                    const textSpan = this.querySelector('span');
                    
                    // Get AntiForgeryToken (ensure it's available in your page, e.g., via @Html.AntiForgeryToken() in a form)
                    const requestVerificationToken = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

                    try {
                        const response = await fetch(`/Videos/ToggleFavorite`, { // URL changed, videoId will be in body
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': requestVerificationToken // Added AntiForgeryToken
                            },
                            body: JSON.stringify({ videoId: parseInt(videoId) }) // Sending videoId in the body
                        });

                        if (response.ok) {
                            const data = await response.json();
                            if (data.success) {
                                this.classList.toggle('active', data.isFavorited);
                                if (icon) {
                                    icon.classList.toggle('fas', data.isFavorited); // Solid heart if favorited
                                    icon.classList.toggle('far', !data.isFavorited); // Outline heart if not
                                }
                                if (textSpan) {
                                    textSpan.textContent = data.isFavorited ? " Đã thích" : " Yêu thích";
                                }
                            } else {
                                console.error('Lỗi khi cập nhật trạng thái yêu thích:', data.error);
                                // Optionally, display a user-friendly error message
                            }
                        } else {
                            console.error('Lỗi server:', response.status, await response.text());
                            // Optionally, display a user-friendly error message
                        }
                    } catch (error) {
                        console.error('Lỗi JavaScript:', error);
                        // Optionally, display a user-friendly error message
                    }
                });
            }
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const stars = document.querySelectorAll('#star-rating .fa-star');
            const ratingInput = document.getElementById('rating');

            stars.forEach(star => {
                star.addEventListener('click', function () {
                    const value = parseInt(this.dataset.value);
                    ratingInput.value = value;
                    stars.forEach((s, index) => {
                        if (index < value) {
                            s.classList.remove('far');
                            s.classList.add('fas');
                        } else {
                            s.classList.remove('fas');
                            s.classList.add('far');
                        }
                    });
                });
                star.addEventListener('mouseover', function () {
                    const value = parseInt(this.dataset.value);
                    stars.forEach((s, index) => {
                        if (index < value) {
                            s.classList.remove('far');
                            s.classList.add('fas', 'text-warning');
                        } else {
                            s.classList.remove('fas', 'text-warning');
                            s.classList.add('far');
                        }
                    });
                });
                star.addEventListener('mouseout', function () {
                    const currentValue = parseInt(ratingInput.value);
                    stars.forEach((s, index) => {
                        if (index < currentValue) {
                            s.classList.remove('far');
                            s.classList.add('fas', 'text-warning');
                        } else {
                            s.classList.remove('fas', 'text-warning');
                            s.classList.add('far');
                        }
                         // Ensure stars remain yellow if selected
                        if (index < currentValue) {
                            s.classList.add('text-warning');
                        } else {
                            s.classList.remove('text-warning');
                        }
                    });
                });
            });
        });
    </script>
}